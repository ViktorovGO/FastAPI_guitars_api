name: CI/CD

on:
  push:
    branches: 
      - master
  pull_request:
    branches:
      - master
permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      -
        name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      -
        name: Build and push
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: ${{ vars.DOCKERHUB_USERNAME }}/fastapi_guitars_api-api:latest
  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install Poetry
        uses: snok/install-poetry@v1 
      - name: Installing Requirements
        run: |
          poetry install --no-root
      - name: Run flake8
        run: |
          poetry run flake8 .
      - name: Run black
        run: |
          poetry run black . --check
      - name: Run db
        run: |
          docker compose up db -d
      - name: Run pytest
        run: |
          poetry run alembic upgrade head
          poetry run pytest
    env:
      DB_NAME: ${{ secrets.DB_NAME }}
      DB_USER: ${{ secrets.DB_USER }}
      DB_PASS: ${{ secrets.DB_PASS }}
      DB_PORT: ${{ secrets.DB_PORT }}
      DB_HOST: localhost
  deploy:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: executing remote ssh commands using ssh key
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT }}
        env:
          APP_PORT: 8005
          DB_NAME: ${{ secrets.DB_NAME }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASS: ${{ secrets.DB_PASS }}
          DB_PORT: ${{ secrets.DB_PORT }}
          script: |
            cd FastAPI_guitars_api
            git pull
            ls -la
            docker compose pull
            docker compose up -d
          
      


      
